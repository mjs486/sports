{
  "name": "angular-formly-templates-bootstrap",
  "version": "6.2.0",
  "author": {
    "name": "Astrism",
    "email": "astrisms@gmail.com"
  },
  "contributors": [
    {
      "name": "Astrism",
      "email": "astrisms@gmail.com"
    },
    {
      "name": "Kent C. Dodds",
      "email": "kent@doddsfamily.us"
    }
  ],
  "homepage": "http://formly-js.github.io/angular-formly-templates-bootstrap/",
  "repository": {
    "type": "git",
    "url": "https://github.com/formly-js/angular-formly-templates-bootstrap.git"
  },
  "main": "dist/angular-formly-templates-bootstrap.js",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.githubusercontent.com/formly-js/angular-formly-templates-bootstrap/master/LICENSE"
    }
  ],
  "scripts": {
    "commit": "git-cz",
    "build:dev": "NODE_ENV=development webpack --config node_modules/kcd-common-tools/shared/webpack.config.js --progress --colors",
    "build:prod": "NODE_ENV=production webpack --config node_modules/kcd-common-tools/shared/webpack.config.js --progress --colors",
    "build": "npm run build:dev; npm run build:prod",
    "test": "echo 'Still need to set these up...'",
    "watch": "webpack --watch",
    "start": "npm run watch",
    "prepublish": "npm run build",
    "postpublish": "publish-latest --user-email kent+formly-bot@doddsfamily.us --user-name formly-bot",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post"
  },
  "description": "Angular-Formly plugin which outputs bootstrap compatible form fields.",
  "peerDependencies": {
    "angular": "^1.2.x || >= 1.4.0-beta.0 || >= 1.5.0-beta.0",
    "angular-formly": ">=6.20.0",
    "api-check": ">=7.5.0",
    "bootstrap": "^3.2.0"
  },
  "devDependencies": {
    "babel-core": "5.8.25",
    "babel-loader": "5.3.2",
    "commitizen": "1.0.5",
    "cz-conventional-changelog": "1.1.2",
    "deep-extend": "0.4.0",
    "ghooks": "0.3.2",
    "jshint": "2.8.0",
    "jshint-loader": "0.8.3",
    "kcd-common-tools": "1.0.0-beta.23",
    "lodash-node": "3.10.1",
    "ng-annotate": "1.0.2",
    "ng-annotate-loader": "0.0.10",
    "node-libs-browser": "0.5.3",
    "publish-latest": "1.1.2",
    "raw-loader": "0.5.1",
    "semantic-release": "4.3.5",
    "validate-commit-msg": "1.0.0",
    "webpack": "1.12.2"
  },
  "license": "MIT",
  "czConfig": {
    "path": "node_modules/cz-conventional-changelog"
  },
  "config": {
    "ghooks": {
      "commit-msg": "./node_modules/.bin/validate-commit-msg"
    }
  },
  "kcdCommon": {
    "webpack": "scripts/webpack-overrides.js"
  },
  "readme": "# angular-formly: Bootstrap Template\n\nStatus:\n[![npm version](https://img.shields.io/npm/v/angular-formly-templates-bootstrap.svg?style=flat-square)](https://www.npmjs.org/package/angular-formly-templates-bootstrap)\n[![npm downloads](https://img.shields.io/npm/dm/angular-formly-templates-bootstrap.svg?style=flat-square)](http://npm-stat.com/charts.html?package=angular-formly-templates-bootstrap&from=2015-09-01)\n[![Build Status](https://img.shields.io/travis/formly-js/angular-formly-templates-bootstrap.svg?style=flat-square)](https://travis-ci.org/formly-js/angular-formly-templates-bootstrap)\n\nThis is a template for angular-formly which adds templates with classes specific to bootstrap. Each field is wrapped in a div. This library is not standalone and requires angular-formly to be present and loaded.\n\n### Demo http://angular-formly.com\n\n## Dependencies\n- Required to use these templates:\n - angular\n - angular-formly\n - api-check\n\n- Dev dependencies to build Formly\n - npm\n\n\n## Install in your project\n- Install [angular-formly](https://github.com/formly-js/angular-formly)\n\n- Install angular-formly: Bootstrap Templates\n `$ bower install angular-formly angular-formly-templates-bootstrap --save`\n\n or\n\n `$ npm install angular-formly angular-formly-templates-bootstrap --save`\n\n- Include the javascript file in your index.html, Formly comes in the following flavors:\n `<script src=\"bower_components/angular-formly/dist/formly.min.js\"></script>`\n `<script src=\"bower_components/angular-formly-templates-bootstrap/dist/angular-formly-templates-bootstrap.min.js\"></script>`\n\n and\n\n `angular.module('yourModule', ['formly', 'formlyBootstrap']);`\n\n or\n\n `angular.module('yourModule', [require('angular-formly'), require('angular-formly-templates-bootstrap')]);`\n\n## Documentation\n\nSee [angular-formly](http://docs.angular-formly.com) for formly core documentation.\n\n### Common Properties\n\nNOTE: All of these properties will be under the `templateOptions` property as of angular-formly 3.0.0\n\n---\n##### label (string)\n>`label` is used to add an html label to each field.\n\n###### Default\n>`undefined`\n\n---\n##### labelSrOnly (boolean)\n>`labelSrOnly` is used to add the sr-only class to a label so it will hide on non-screen-readers\n\n###### Default\n>`undefined`\n\n---\n##### required (boolean)\n>`required` is used to add the required attribute to a form field.\n\n###### Default\n>`undefined`\n\n---\n##### disabled (boolean)\n>`disabled` is used to add the disabled attribute to a form field.\n\n###### Default\n>`undefined`\n\n---\n##### placeholder (string)\n>`placeholder` is used to add placeholder text to some inputs.\n\n###### Default\n>`undefined`\n\n---\n##### description (string)\n>`description` is used to add descriptive text to all inputs.\n\n###### Default\n>`undefined`\n\n---\n##### addonLeft (object)\n>`addonLeft` is used to add an add-on on the left of a field. The object accepts three properties: `text` that sets a simple text, `onClick` will add a `cursor:pointer` and an ng-click to the addon (invoked with the options and scope), and `class` that sets classes to the add-on.\n\n###### Default\n>`undefined`\n\n---\n##### addonRight (object)\n>`addonRight` is used to add an add-on on the right of a field. The object accepts three properties: `text` that sets a simple text, `onClick` will add a `cursor:pointer` and an ng-click to the addon (invoked with the options and scope), and `class` that sets classes to the add-on.\n\n###### Default\n>`undefined`\n\n### Fields\n\n### Form Fields\n\nBelow is a detailed description of each form fields and its custom properties.\n\n#### Input form field\n>The input uses the <input> element and allows you to specify it's type via the type property\n\n_Example text field_\n```javascript\n{\n  \"type\": \"input\",\n  \"key\": \"firstName\",\n  \"templateOptions\": {\n    \"type\": \"email\", // or url, or text, etc.\n    \"placeholder\": \"jane doe\",\n    \"label\": \"First name\"\n  }\n}\n```\n\n---\n#### Textarea form field\n>The textarea field creates multiline input with a textarea element.\n\n##### lines (number, optional)\n>`lines` sets the rows attribute for the textarea element.\n\n_Example textarea field_\n```json\n{\n  \"type\": \"textarea\",\n  \"key\": \"about\",\n  \"templateOptions\": {\n    \"placeholder\": \"I like puppies\",\n    \"label\": \"Tell me about yourself\",\n    \"rows\": 4,\n    \"cols\": 15\n  }\n}\n```\n\n---\n#### Checkbox form field\n>The checkbox field allows checkbox input with a input element set to `type='checkbox'`. It doesn't have any custom properties.\n\n_Example checkbox field_\n```json\n{\n  \"type\": \"checkbox\",\n  \"key\": \"checkThis\",\n  \"templateOptions\": {\n    \"label\": \"Check this box\"\n  }\n}\n```\n\n---\n#### multiCheckbox form field\n>The multiCheckbox field allows to have a set of checkboxes which will be bind to a provided model value.\n\n##### options (array, required)\n>`options` is an array of options for the multiCheckbox form field to display. Each option should be an object.\n\n##### labelProp (string, optional)\n>`labelProp` is what is used for what is shown to the user. Defaults to `name`\n\n##### valueProp (string, optional)\n>`valueProp` is what is used for the value assigned to the model. Defaults to `value`\n\n_Example multiCheckbox field_\n```javascript\n{\n  key: 'roles',\n  type: 'multiCheckbox',\n  templateOptions: {\n    label: 'Roles',\n    options: [{id: 1, title : \"Administrator\"}, {id: 2, title : \"User\"}],\n    valueProp: 'id',\n    labelProp: 'title'\n  }\n}\n```\n\n_Example multiCheckbox field with async options_\n```javascript\n{\n  key: 'roles',\n  type: 'multiCheckbox',\n  templateOptions: {\n    label: 'Roles',\n    options: [],\n    valueProp: 'id',\n    labelProp: 'title'\n  },\n  controller: function($scope, DataService) {\n    DataService.getRoles().then(function(roles){\n      // roles: [{id: 1, title : \"Administrator\"}, {id: 2, title : \"User\"}]\n       $scope.to.options = roles;\n    });\n  }\n}\n```\n---\n#### Radio form field\n>The radio field allows multiple choice input with a series of linked inputs, with `type='radio'`.\n\n##### options (array, required)\n>`options` is an array of options for the radio form field to display. Each option should be an object with a `name`(string) and `value`(string or number).\n\n_Example radio field_\n```json\n{\n  \"key\": \"triedEmber\",\n  \"type\": \"radio\",\n  \"templateOptions\": {\n    \"label\": \"Have you tried EmberJs yet?\",\n    \"options\": [\n      {\n        \"name\": \"Yes, and I love it!\",\n        \"value\": \"yesyes\"\n      },\n      {\n        \"name\": \"Yes, but I'm not a fan...\",\n        \"value\": \"yesno\"\n      },\n      {\n        \"name\": \"Nope\",\n        \"value\": \"no\"\n      }\n    ]\n  }\n}\n```\n\n---\n#### Select form field\n>The select field allows selection via dropdown using the select element.\n\n##### options (array, required)\n>`options` is an array of options for the select form field to display. Each option should be an object with a `name`(string). You may optionally add a `group` to some or all of your options.\n\n##### labelProp (string, optional)\n>`labelProp` is what is used for what is shown to the user. Defaults to `name`\n\n##### valueProp (string, optional)\n>`valueProp` is what is used for the value assigned to the model. Defaults to `value`\n\n##### groupProp (string, optional)\n>`groupProp` is what is used to group the options\n\n##### optionsAttr (string, optional)\n>`optionsAttr` is what is used as the attribute ngOptions will be applied to. Defaults to `ng-options`\n\n##### ngOptions (string, optional)\n>If provided, this is used instead of the default `ng-options` giving you full control (and rendering the other options uncessisary.\n\n[Example](http://angular-formly.com/#/example/bootstrap-formly/select)\n\n_Example select field_\n```json\n{\n  \"key\": \"transportation\",\n  \"type\": \"select\",\n  \"templateOptions\": {\n    \"label\": \"How do you get around in the city\",\n    \"valueProp\": \"name\",\n    \"options\": [\n      {\n        \"name\": \"Car\"\n      },\n      {\n        \"name\": \"Helicopter\"\n      },\n      {\n        \"name\": \"Sport Utility Vehicle\"\n      },\n      {\n        \"name\": \"Bicycle\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Skateboard\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Walk\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Bus\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Scooter\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Train\",\n        \"group\": \"low emissions\"\n      },\n      {\n        \"name\": \"Hot Air Baloon\",\n        \"group\": \"low emissions\"\n      }\n    ]\n  }\n}\n```\n\n## Contributing\n\nPlease see the [CONTRIBUTING Guidelines](CONTRIBUTING.md).\n\n## Thanks\n\nA special thanks to [Nimbly](http://gonimbly.com) for creating/sponsoring angular-formly's development.\nThanks to [Kent C. Dodds](https://github.com/kentcdodds) for his continued support on the project.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/formly-js/angular-formly-templates-bootstrap/issues"
  },
  "_id": "angular-formly-templates-bootstrap@6.2.0",
  "dist": {
    "shasum": "0bfbe00aa6bc43703fc491b1c0bd9c64c3384abb"
  },
  "_from": "angular-formly-templates-bootstrap@",
  "_resolved": "https://registry.npmjs.org/angular-formly-templates-bootstrap/-/angular-formly-templates-bootstrap-6.2.0.tgz"
}
